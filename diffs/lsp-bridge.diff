diff --git a/lsp-bridge-diagnostic.el b/lsp-bridge-diagnostic.el
index d86c497..d4233a5 100644
--- a/lsp-bridge-diagnostic.el
+++ b/lsp-bridge-diagnostic.el
@@ -139,7 +139,14 @@
 (autoload 'lsp-bridge--with-file-buffer "lsp-bridge")
 
 (defun lsp-bridge-diagnostic-hide-tooltip ()
-  (posframe-hide lsp-bridge-diagnostic-tooltip))
+  (acm-frame-hide-frame lsp-bridge-diagnostic-frame))
+
+(cl-defmacro lsp-bridge--with-file-buffer (filepath &rest body)
+  "Evaluate BODY in buffer with FILEPATH."
+  (declare (indent 1))
+  `(when-let ((buffer (lsp-bridge-get-match-buffer ,filepath)))
+     (with-current-buffer buffer
+       ,@body)))
 
 (defun lsp-bridge-diagnostic--render (filepath diagnostics)
   (lsp-bridge--with-file-buffer filepath
@@ -180,7 +187,7 @@
 (defun lsp-bridge-diagnostic-show-tooltip (diagnostic-overlay &optional goto-beginning)
   (let* ((diagnostic-display-message (overlay-get diagnostic-overlay 'display-message))
          (diagnostic-message (overlay-get diagnostic-overlay 'message))
-         (foreground-color (plist-get (face-attribute (overlay-get diagnostic-overlay 'face) :underline) :color)))
+         (cursor (acm-frame-get-popup-position (point))))
     ;; weather goto beginning of diagnostic
     (when goto-beginning
       (goto-char (overlay-start diagnostic-overlay)))
@@ -192,16 +199,11 @@
 
     (cond
      ((posframe-workable-p) ;; Perform redisplay make sure posframe can poup to
-      ;; Perform redisplay make sure posframe can poup to
-      (redisplay 'force)
-      (sleep-for 0.01)
-      (setq lsp-bridge-diagnostic-frame
-            (posframe-show lsp-bridge-diagnostic-tooltip
-                           :position (point)
-                           :internal-border-width lsp-bridge-diagnostic-tooltip-border-width
-                           :background-color (acm-frame-background-color)
-                           :foreground-color foreground-color
-                           )))
+      (acm-frame-create-frame-if-not-exist  lsp-bridge-diagnostic-frame lsp-bridge-diagnostic-tooltip
+                                            "lsp bridge diagnostic tooltip" 0 t)
+      (acm-frame-set-frame-position lsp-bridge-diagnostic-frame
+                                    (car cursor) (+ (cdr cursor) (line-pixel-height)))
+      (acm-frame-set-frame-max-size lsp-bridge-diagnostic-frame))
      (t (message diagnostic-message)))))
 
 (defun lsp-bridge-diagnostic-maybe-display-error-at-point ()
@@ -246,11 +248,10 @@
     (message "[LSP-Bridge] Reach first diagnostic.")))
 
 (defun lsp-bridge-diagnostic-overlay-at-point ()
-  (cl-dolist (overlay lsp-bridge-diagnostic-overlays)
-    (when (and (>= (point) (overlay-start overlay))
+  (cl-loop for overlay in lsp-bridge-diagnostic-overlays
+    do (when (and (>= (point) (overlay-start overlay))
                (< (point) (overlay-end overlay)))
-      (cl-return overlay)
-      )))
+      (cl-return overlay))))
 
 (defun lsp-bridge-diagnostic-copy ()
   (interactive)
diff --git a/lsp-bridge.el b/lsp-bridge.el
index 8d1cfc4..836a6b9 100644
--- a/lsp-bridge.el
+++ b/lsp-bridge.el
@@ -523,12 +523,6 @@ you can customize `lsp-bridge-get-workspace-folder' to return workspace folder p
   (or (alist-get mode lsp-bridge-formatting-indent-alist)
       (lsp-bridge--get-indent-width (or (get mode 'derived-mode-parent) 'default))))
 
-(cl-defmacro lsp-bridge--with-file-buffer (filepath &rest body)
-  "Evaluate BODY in buffer with FILEPATH."
-  (declare (indent 1))
-  `(when-let ((buffer (lsp-bridge-get-match-buffer ,filepath)))
-     (with-current-buffer buffer
-       ,@body)))
 
 (cl-defmacro lsp-bridge-save-position (&rest body)
   "`save-excursion' not enough for LSP code format.
